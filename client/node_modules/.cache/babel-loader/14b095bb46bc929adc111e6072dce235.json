{"ast":null,"code":"var _jsxFileName = \"/home/dave/du/projects/just_for_laughs/client/src/components/Jokes/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { SAVE_JOKE } from '../../utils/mutations';\nimport { QUERY_JOKES, QUERY_ME } from '../../utils/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = \"https://v2.jokeapi.dev\";\nconst categories = [\"Programming\", \"Misc\", \"Pun\", \"Spooky\", \"Christmas\"];\nconst params = [\"blacklistFlags=nsfw,religious,racist,political,sexist,explicit\"];\n\nconst jokeContainer = async () => {\n  _s();\n\n  const [result, setResult] = useState({});\n  const theJoke = await fetch(`${baseURL}/joke/${categories.join(\",\")}?${params.join(\"&\")}`).then(res => setResult(res.data)).catch(err => console.log(err));\n\n  const handleJokeSubmit = e => {\n    theJoke();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"theJoke\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(jokeContainer, \"o3gogL0PUkXvCfWr1bsKZpErLI4=\");\n\nexport default jokeContainer; // from Project 2\n// async function getJokeApi() {\n//     const response = await fetch('https://v2.jokeapi.dev/joke/Programming?blacklistFlags=nsfw,religious,racist,political,sexist,explicit');\n//     var objects = await response.json();\n//     let jokeLabel = document.getElementById(\"joke-label\");\n//     jokeLabel.innerHTML = \"\";\n//     if (objects.type === 'single') {\n//         jokeLabel.appendChild(document.createTextNode(objects.joke));\n//     } else {\n//         jokeLabel.appendChild(document.createTextNode(objects.setup + \" \" + objects.delivery));\n//     }\n// }","map":{"version":3,"sources":["/home/dave/du/projects/just_for_laughs/client/src/components/Jokes/index.js"],"names":["React","useState","Link","useMutation","SAVE_JOKE","QUERY_JOKES","QUERY_ME","baseURL","categories","params","jokeContainer","result","setResult","theJoke","fetch","join","then","res","data","catch","err","console","log","handleJokeSubmit","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,qBAAtC;;AAEA,MAAMC,OAAO,GAAG,wBAAhB;AACA,MAAMC,UAAU,GAAG,CAAC,aAAD,EAAgB,MAAhB,EAAwB,KAAxB,EAA+B,QAA/B,EAAyC,WAAzC,CAAnB;AACA,MAAMC,MAAM,GAAG,CACX,gEADW,CAAf;;AAIA,MAAMC,aAAa,GAAG,YAAY;AAAA;;AAChC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMY,OAAO,GAAG,MAAMC,KAAK,CACxB,GAAEP,OAAQ,SAAQC,UAAU,CAACO,IAAX,CAAgB,GAAhB,CAAqB,IAAGN,MAAM,CAACM,IAAP,CAAY,GAAZ,CAAiB,EADnC,CAAL,CAGnBC,IAHmB,CAGbC,GAAD,IAASL,SAAS,CAACK,GAAG,CAACC,IAAL,CAHJ,EAInBC,KAJmB,CAIZC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJI,CAAtB;;AAME,QAAMG,gBAAgB,GAAIC,CAAD,IAAO;AAC5BX,IAAAA,OAAO;AACV,GAFD;;AAIF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAnBD;;GAAMH,a;;AAqBN,eAAeA,aAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { SAVE_JOKE } from '../../utils/mutations';\nimport { QUERY_JOKES, QUERY_ME } from '../../utils/queries';\n\nconst baseURL = \"https://v2.jokeapi.dev\";\nconst categories = [\"Programming\", \"Misc\", \"Pun\", \"Spooky\", \"Christmas\"];\nconst params = [\n    \"blacklistFlags=nsfw,religious,racist,political,sexist,explicit\"\n];\n\nconst jokeContainer = async () => {\n  const [result, setResult] = useState({});\n\n  const theJoke = await fetch(\n    `${baseURL}/joke/${categories.join(\",\")}?${params.join(\"&\")}`\n  )\n    .then((res) => setResult(res.data))\n    .catch((err) => console.log(err));\n\n    const handleJokeSubmit = (e) => {\n        theJoke()\n    }\n\n  return (\n    <div>\n        theJoke\n    </div>\n  )\n\n};\n\nexport default jokeContainer\n\n\n// from Project 2\n// async function getJokeApi() {\n//     const response = await fetch('https://v2.jokeapi.dev/joke/Programming?blacklistFlags=nsfw,religious,racist,political,sexist,explicit');\n//     var objects = await response.json();\n//     let jokeLabel = document.getElementById(\"joke-label\");\n//     jokeLabel.innerHTML = \"\";\n//     if (objects.type === 'single') {\n//         jokeLabel.appendChild(document.createTextNode(objects.joke));\n//     } else {\n//         jokeLabel.appendChild(document.createTextNode(objects.setup + \" \" + objects.delivery));\n//     }\n// }"]},"metadata":{},"sourceType":"module"}