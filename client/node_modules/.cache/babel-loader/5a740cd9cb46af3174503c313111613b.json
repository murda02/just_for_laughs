{"ast":null,"code":"import axios from 'axios'; // const baseURL = \"https://v2.jokeapi.dev\";\n// const categories = [\"Programming\", \"Misc\", \"Pun\", \"Spooky\", \"Christmas\"];\n// const params = [\n//     \"blacklistFlags=nsfw,religious,racist,political,sexist,explicit\"\n// ];\n\nexport const theJoke = async category => axios.get(`https://v2.jokeapi.dev/joke/${category}?blacklistFlags=nsfw,religious,racist,political,sexist,explicit`); //   axios.get(`${baseURL}/joke/${categories.join(\",\")}?${params.join(\"&\")};\n// export default { theJoke };\n// Function to compute the url formatting for genre based on user input\n\nfunction jokeCategory(inputCategory) {\n  if (inputCategory) {\n    switch (inputCategory) {\n      case \"Misc\":\n        return \"Misc\";\n\n      case \"Programming\":\n        return \"Programming\";\n\n      case \"Pun\":\n        return \"Pun\";\n\n      case \"Halloween\":\n        return \"Halloween\";\n\n      case \"Christmas\":\n        return \"Christmas\";\n\n      case \"Any\":\n        return \"Any\";\n\n      default:\n        return \"Any\";\n    }\n  }\n} // Function that develops the movie url by running all three compute functions above, and building the url with the results, then pulling data from the url\n\n\nasync function makeUrl(category) {\n  // await jokeCategory(category);\n  let api_url = `https://v2.jokeapi.dev/joke/${category}?blacklistFlags=nsfw,religious,racist,political,sexist,explicit`; // getMovieApi(api_url);\n}\n\nconsole.log(\"makeUrl: \", makeUrl());","map":{"version":3,"sources":["/home/dave/du/projects/just_for_laughs/client/src/utils/API.js"],"names":["axios","theJoke","category","get","jokeCategory","inputCategory","makeUrl","api_url","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAOC,QAAP,IACnBF,KAAK,CAACG,GAAN,CAAW,+BAA8BD,QAAS,iEAAlD,CADG,C,CAEP;AAEA;AAEE;;AACA,SAASE,YAAT,CAAsBC,aAAtB,EAAqC;AACnC,MAAIA,aAAJ,EAAmB;AACjB,YAAQA,aAAR;AACE,WAAK,MAAL;AACE,eAAO,MAAP;;AACF,WAAK,aAAL;AACE,eAAO,aAAP;;AACF,WAAK,KAAL;AACE,eAAO,KAAP;;AACF,WAAK,WAAL;AACE,eAAO,WAAP;;AACF,WAAK,WAAL;AACE,eAAO,WAAP;;AACF,WAAK,KAAL;AACE,eAAO,KAAP;;AACF;AACE,eAAO,KAAP;AAdJ;AAgBD;AACF,C,CAED;;;AACF,eAAeC,OAAf,CAAuBJ,QAAvB,EAAiC;AAC7B;AAEA,MAAIK,OAAO,GAAI,+BAA8BL,QAAS,iEAAtD,CAH6B,CAI7B;AACH;;AAEDM,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,OAAO,EAAhC","sourcesContent":["import axios from 'axios';\n\n// const baseURL = \"https://v2.jokeapi.dev\";\n// const categories = [\"Programming\", \"Misc\", \"Pun\", \"Spooky\", \"Christmas\"];\n// const params = [\n//     \"blacklistFlags=nsfw,religious,racist,political,sexist,explicit\"\n// ];\n\nexport const theJoke = async (category)  =>\n    axios.get(`https://v2.jokeapi.dev/joke/${category}?blacklistFlags=nsfw,religious,racist,political,sexist,explicit`)\n//   axios.get(`${baseURL}/joke/${categories.join(\",\")}?${params.join(\"&\")};\n\n// export default { theJoke };\n\n  // Function to compute the url formatting for genre based on user input\n  function jokeCategory(inputCategory) {\n    if (inputCategory) {\n      switch (inputCategory) {\n        case \"Misc\":\n          return \"Misc\";\n        case \"Programming\":\n          return \"Programming\";\n        case \"Pun\":\n          return \"Pun\";\n        case \"Halloween\":\n          return \"Halloween\";\n        case \"Christmas\":\n          return \"Christmas\";\n        case \"Any\":\n          return \"Any\";\n        default:\n          return \"Any\";\n      }\n    }\n  }\n\n  // Function that develops the movie url by running all three compute functions above, and building the url with the results, then pulling data from the url\nasync function makeUrl(category) {\n    // await jokeCategory(category);\n\n    let api_url = `https://v2.jokeapi.dev/joke/${category}?blacklistFlags=nsfw,religious,racist,political,sexist,explicit`;\n    // getMovieApi(api_url);\n}\n\nconsole.log(\"makeUrl: \", makeUrl());"]},"metadata":{},"sourceType":"module"}