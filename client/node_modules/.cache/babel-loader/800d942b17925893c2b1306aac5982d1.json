{"ast":null,"code":"var _jsxFileName = \"/home/dave/du/projects/just_for_laughs/client/src/components/Jokes/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { theJoke } from '../../utils/API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JokeContainer = () => {\n  _s();\n\n  const [result, setResult] = useState({}); //   const theJoke = await fetch(\n  //     `${baseURL}/joke/${categories.join(\",\")}?${params.join(\"&\")}`\n  //   )\n  //     .then((res) => setResult(res.data))\n  //     .catch((err) => console.log(err));\n  //     const handleJokeSubmit = (e) => {\n  //         theJoke()\n  //     }\n\n  useEffect(() => {\n    theJoke();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JokeContainer, \"jdDk1hnzNDJ7Cwz+sae2+Wzf/mg=\");\n\n_c = JokeContainer;\nexport default JokeContainer; // from Project 2\n// async function getJokeApi() {\n//     const response = await fetch('https://v2.jokeapi.dev/joke/Programming?blacklistFlags=nsfw,religious,racist,political,sexist,explicit');\n//     var objects = await response.json();\n//     let jokeLabel = document.getElementById(\"joke-label\");\n//     jokeLabel.innerHTML = \"\";\n//     if (objects.type === 'single') {\n//         jokeLabel.appendChild(document.createTextNode(objects.joke));\n//     } else {\n//         jokeLabel.appendChild(document.createTextNode(objects.setup + \" \" + objects.delivery));\n//     }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"JokeContainer\");","map":{"version":3,"sources":["/home/dave/du/projects/just_for_laughs/client/src/components/Jokes/index.js"],"names":["React","useState","useEffect","theJoke","JokeContainer","result","setResult"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,OAAR,QAAsB,iBAAtB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC,CAD0B,CAG5B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,OAAO;AACR,GAFM,EAEJ,EAFI,CAAT;AAKE,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAxBD;;GAAMC,a;;KAAAA,a;AA0BN,eAAeA,aAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {theJoke} from '../../utils/API'\n\nconst JokeContainer = () => {\n  const [result, setResult] = useState({});\n\n//   const theJoke = await fetch(\n//     `${baseURL}/joke/${categories.join(\",\")}?${params.join(\"&\")}`\n//   )\n//     .then((res) => setResult(res.data))\n//     .catch((err) => console.log(err));\n\n//     const handleJokeSubmit = (e) => {\n//         theJoke()\n//     }\n\nuseEffect(() => {\n    theJoke();\n  }, []);\n\n\n  return (\n    <div>\n        \n    </div>\n  )\n\n};\n\nexport default JokeContainer\n\n\n// from Project 2\n// async function getJokeApi() {\n//     const response = await fetch('https://v2.jokeapi.dev/joke/Programming?blacklistFlags=nsfw,religious,racist,political,sexist,explicit');\n//     var objects = await response.json();\n//     let jokeLabel = document.getElementById(\"joke-label\");\n//     jokeLabel.innerHTML = \"\";\n//     if (objects.type === 'single') {\n//         jokeLabel.appendChild(document.createTextNode(objects.joke));\n//     } else {\n//         jokeLabel.appendChild(document.createTextNode(objects.setup + \" \" + objects.delivery));\n//     }\n// }"]},"metadata":{},"sourceType":"module"}