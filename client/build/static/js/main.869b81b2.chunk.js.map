{"version":3,"sources":["utils/API.js","utils/mutations.js","utils/auth.js","components/Jokes/index.js","pages/Home.js","pages/Signup.js","pages/Login.js","utils/queries.js","pages/Profile.js","components/Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["theJoke","category","a","axios","get","LOGIN_USER","gql","ADD_USER","ADD_JOKE","REMOVE_JOKE","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","JokeContainer","useState","btnColorNew","setBtnColorNew","btnColorSave","setBtnColorSave","clicked","setClicked","result","setResult","setCategory","useMutation","addJoke","useEffect","then","res","data","saveJoke","fullJoke","undefined","joke","setup","delivery","Auth","loggedIn","variables","jokeText","alert","style","marginTop","fontSize","justifyContent","scoped","display","color","id","onChange","e","target","value","backgroundColor","borderStyle","borderColor","onClick","borderRadius","Home","className","Signup","username","email","password","formState","setFormState","addUser","error","handleChange","event","name","handleFormSubmit","preventDefault","login","console","formStyle","flexFlow","marginRight","paddingBottom","paddingRight","to","onSubmit","placeholder","type","cursor","message","Login","props","margin","marginLeft","QUERY_USER","QUERY_ME","Profile","removeJoke","userParam","useParams","useQuery","loading","deleteJoke","jokeId","user","me","getProfile","hStyle","savedJokesStyle","whiteSpace","padding","jokes","map","d","_id","Header","linkStyle","textDecoration","logout","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAEaA,EAAO,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EACnBC,IAAMC,IAAN,sCAAyCH,EAAzC,qEADmB,2CAAH,sD,0BCAPI,EAAaC,YAAH,qNAYVC,EAAWD,YAAH,kQAYRE,EAAWF,YAAH,iJASRG,EAAcH,YAAH,kH,wBCKT,M,0FArCb,WACE,OAAOI,YAAOC,KAAKC,c,sBAGrB,WACE,IAAMC,EAAQF,KAAKC,WAEnB,SAAOC,GAAUF,KAAKG,eAAeD,M,4BAGvC,SAAeA,GAIb,OAFgBH,YAAOG,GAEXE,IAAMC,KAAKC,MAAQ,MAC7BC,aAAaC,WAAW,aACjB,K,sBAMX,WACE,OAAOD,aAAaE,QAAQ,c,mBAG9B,SAAMC,GACJH,aAAaI,QAAQ,WAAYD,GACjCE,OAAOC,SAASC,OAAO,O,oBAGzB,WACEP,aAAaC,WAAW,YACxBI,OAAOC,SAASE,a,aCyILC,EAvKO,WACpB,MAAsCC,mBAAS,sBAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCF,mBAAS,sBAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAgCR,mBAAS,OAAzC,mBAAO3B,EAAP,KAAiBoC,EAAjB,KACA,EAAkBC,YAAY9B,GAAvB+B,EAAP,oBAEAC,qBAAU,WACRxC,EAAQC,GAAUwC,MAAK,SAACC,GACtBN,EAAUM,EAAIC,WAEf,CAAC1C,IAEJ,IAUM2C,EAAQ,uCAAG,WAAOT,GAAP,eAAAjC,EAAA,yDAEX2C,EAAW,GAEbA,OADkBC,IAAhBX,EAAOY,KACEZ,EAAOa,MAAQ,OAASb,EAAOc,SAE/Bd,EAAOY,MAIhBG,EAAKC,WAVM,gCAWTZ,EAAQ,CACZa,UAAW,CAAEC,SAAUR,KAZV,6BAebS,MAAM,4CAfO,2CAAH,sDA+Ed,OACE,sBAAKC,MA1CQ,CACbC,UAAW,KACXC,SAAU,SACVC,eAAgB,UAuChB,UACE,uBAAOC,QAAM,EAAb,SAnBK,6dAoBL,wBAAOJ,MAzDS,CAClBK,QAAS,OACTF,eAAgB,OAChBG,MAAO,UAsDL,uCAEE,yBAAQC,GAAG,eAAeC,SA9FX,SAACC,GACpB3B,EAAY2B,EAAEC,OAAOC,QA6FiCX,MArDtC,CAChBE,SAAU,SACVG,QAAS,OACTO,gBAAiB,qBACjBT,eAAgB,UAiDZ,UACE,6CACA,wBAAQQ,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,6BAGJ,sBAAKJ,GAAG,UAAUP,MAlDN,CACda,YAAa,QACbC,YAAa,SACbT,QAAS,cACTC,MAAO,UA8CL,UACG1B,EAAOY,KACPZ,EAAOa,MACR,uBACA,uBACCb,EAAOc,YAEV,uBACA,wBACEqB,QAAS,WAEHxC,EADY,uBAAhBD,EACmB,SACA,sBA/GzB7B,EAAQC,GAAUwC,MAAK,SAACC,GACtBN,EAAUM,EAAIC,UAiHZY,MAAO,CACLY,gBAAiBtC,EACjB4B,SAAU,SACVc,aAAc,OAVlB,uBAeA,wBACED,QAAS,WAEHtC,EADa,uBAAjBD,EACoB,SACA,sBACpBa,EAAST,GAtGVF,GACHC,GAAW,IAwGTqB,MAAO,CACLY,gBAAiBpC,EACjB0B,SAAU,SACVc,aAAc,OAXlB,4BC7HSC,EAlBF,WAGX,OACE,+BACE,sBAAKC,UAAU,0BAAf,UACE,qBACEA,UAAU,4BADZ,SAGE,cAAC,EAAD,MAEF,qBAAKA,UAAU,+B,QCoHRC,EA5HA,WACb,MAAkC9C,mBAAS,CACzC+C,SAAU,GACVC,MAAO,GACPC,SAAU,KAHZ,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,EAAmCzC,YAAY/B,GAA/C,mBAAOyE,EAAP,YAAkBC,EAAlB,EAAkBA,MAAOtC,EAAzB,EAAyBA,KAEnBuC,EAAe,SAACC,GACpB,MAAwBA,EAAMlB,OAAtBmB,EAAR,EAAQA,KAAMlB,EAAd,EAAcA,MAEda,EAAa,2BACRD,GADO,kBAETM,EAAOlB,MAINmB,EAAgB,uCAAG,WAAOF,GAAP,iBAAAjF,EAAA,6DACvBiF,EAAMG,iBADiB,kBAIEN,EAAQ,CAC7B5B,UAAU,eAAM0B,KALG,gBAIbnC,EAJa,EAIbA,KAIRO,EAAKqC,MAAM5C,EAAKqC,QAAQnE,OARH,gDAUrB2E,QAAQP,MAAR,MAVqB,yDAAH,sDAsBlBQ,EAAY,CACdhC,SAAU,SACVG,QAAS,OACTF,eAAgB,SAChBgC,SAAS,WACTC,YAAa,OAkBf,OACE,sBAAMlB,UAAU,+BAAhB,SACE,qBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIlB,MAnCK,CACfE,SAAU,SACVG,QAAS,OACTF,eAAgB,SAChBkC,cAAe,KACf/B,MAAO,UA8BD,qBACA,sBAAKY,UAAU,YAAYlB,MApBpB,CACbE,SAAU,SACVG,QAAS,OACTF,eAAgB,SAChBkC,cAAe,KACfC,aAAc,MAeR,UACGlD,EACC,0DAC4B,IAC1B,cAAC,IAAD,CAAMmD,GAAG,IAAT,sCAGF,uBAAMC,SAAUV,EAAkB9B,MAAOkC,EAAzC,UACE,uBACEhB,UAAU,aACVuB,YAAY,iBACZZ,KAAK,WACLa,KAAK,OACL/B,MAAOY,EAAUM,KACjBrB,SAAUmB,EACV3B,MAAOkC,IAET,uBACEhB,UAAU,aACVuB,YAAY,cACZZ,KAAK,QACLa,KAAK,QACL/B,MAAOY,EAAUF,MACjBb,SAAUmB,EACV3B,MAAOkC,IAET,uBACEhB,UAAU,aACVuB,YAAY,iBACZZ,KAAK,WACLa,KAAK,WACL/B,MAAOY,EAAUD,SACjBd,SAAUmB,EACV3B,MAAOkC,IAET,wBACEhB,UAAU,4BACVwB,KAAK,SACL1C,MAlDK,CACnBE,SAAU,SACVU,gBAAiB,qBACjBI,aAAc,MACd2B,OAAQ,WA2CI,uBAUHjB,GACC,qBAAKR,UAAU,gCAAf,SACGQ,EAAMkB,qBCKRC,EAxHD,SAACC,GACb,MAAkCzE,mBAAS,CAAEgD,MAAO,GAAIC,SAAU,KAAlE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCzC,YAAYjC,GAA7C,mBAAOkF,EAAP,YAAgBN,EAAhB,EAAgBA,MAAOtC,EAAvB,EAAuBA,KAGjBuC,EAAe,SAACC,GACpB,MAAwBA,EAAMlB,OAAtBmB,EAAR,EAAQA,KAAMlB,EAAd,EAAcA,MAEda,EAAa,2BACRD,GADO,kBAETM,EAAOlB,MAKNmB,EAAgB,uCAAG,WAAOF,GAAP,iBAAAjF,EAAA,6DACvBiF,EAAMG,iBADiB,kBAGEC,EAAM,CAC3BnC,UAAU,eAAM0B,KAJG,gBAGbnC,EAHa,EAGbA,KAIRO,EAAKqC,MAAM5C,EAAK4C,MAAM1E,OAPD,gDASrB2E,QAAQP,MAAR,MATqB,QAavBF,EAAa,CACXH,MAAO,GACPC,SAAU,KAfW,yDAAH,sDA2BlBY,EAAY,CACdhC,SAAU,SACVG,QAAS,eACTF,eAAgB,SAChB4C,OAAQ,MACRC,WAAY,MAoBd,OACE,sBAAM9B,UAAU,+BAAhB,SACE,qBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIlB,MArCK,CACfE,SAAU,SACVG,QAAS,OACTF,eAAgB,OAChBG,MAAO,SACP0C,WAAY,MAgCN,mBACA,sBAAK9B,UAAU,YAAYlB,MAtBpB,CACbE,SAAU,SACVG,QAAS,OACTF,eAAgB,OAChBkC,cAAe,KACfC,aAAc,MAiBR,UACGlD,EACC,0DAC4B,IAC1B,cAAC,IAAD,CAAMmD,GAAG,IAAT,sCAGF,uBAAMC,SAAUV,EAAkB9B,MAAOkC,EAAzC,UACE,uBACEhB,UAAU,aACVuB,YAAY,mBACZZ,KAAK,QACLa,KAAK,QACL/B,MAAOY,EAAUF,MACjBb,SAAUmB,EACV3B,MAAOkC,IARX,IASK,gCACH,uBACEhB,UAAU,aACVuB,YAAY,sBACZZ,KAAK,WACLa,KAAK,WACL/B,MAAOY,EAAUD,SACjBd,SAAUmB,EACV3B,MAAOkC,IARN,OAUH,wBACEhB,UAAU,4BACVwB,KAAK,SACL1C,MA3CK,CACnBE,SAAU,SACVU,gBAAiB,qBACjBI,aAAc,MACd2B,OAAQ,UACR1C,UAAW,MAmCC,uBAUHyB,GACC,qBAAKR,UAAU,gCAAf,SACGQ,EAAMkB,qB,SCnHVK,EAAalG,YAAH,4MAcVmG,EAAWnG,YAAH,yICgGNoG,EAtGC,WACd,MAAqBpE,YAAY7B,GAA1BkG,EAAP,oBACA,EAAwC/E,mBAAS,sBAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACkB4E,EAAcC,cAAxBlC,SAER,EAA0BmC,YAASF,EAAYJ,EAAaC,EAAU,CACpErD,UAAW,CAAEuB,SAAUiC,KADjBG,EAAR,EAAQA,QAASpE,EAAjB,EAAiBA,KAIXqE,EAAU,uCAAG,WAAO7E,GAAP,SAAAjC,EAAA,sEACXyG,EAAW,CACfvD,UAAW,CAAE6D,OAAQ9E,KAFN,2CAAH,sDAMV+E,GAAW,OAAJvE,QAAI,IAAJA,OAAA,EAAAA,EAAMwE,MAAN,OAAYxE,QAAZ,IAAYA,OAAZ,EAAYA,EAAMuE,OAAQ,GAEvC,GAAIhE,EAAKC,YAAcD,EAAKkE,aAAazE,KAAKgC,WAAaiC,EACzD,OAAO,cAAC,IAAD,CAAUd,GAAG,QAGtB,GAAIiB,EACF,OAAO,6CAET,IAAIM,EAAS,CACXxD,MAAO,SACP0C,WAAY,MAGd,KAAI,OAACW,QAAD,IAACA,OAAD,EAACA,EAAMvC,UACT,OACE,oBAAIpB,MAAO8D,EAAX,wGAOJ,IAAIC,EAAkB,CACpBzD,MAAO,SACP0D,WAAY,WACZnD,YAAa,QACbC,YAAa,SACbmD,QAAS,KACT5D,QAAS,eAoBX,OACE,8BACE,sBAAKa,UAAU,+BAAf,UACE,uBAAOd,QAAM,EAAb,SApBG,oiBAqBH,qBAAIJ,MAAO8D,EAAX,UACGH,EAAKvC,SADR,yBAEE,0BAEF,8BACGhC,EAAK8E,MAAMC,KAAI,SAACC,GAAD,OACd,sBAAK7D,GAAG,aAAyBP,MAAO+D,EAAxC,UACGK,EAAEtE,SAEH,wBACEiB,QAAS,WAEHtC,EADa,uBAAjBD,EACoB,SACA,sBACpBiF,EAAWW,EAAEC,KACbrG,OAAOC,SAASE,UAElB6B,MAAO,CACLY,gBAAiBpC,EACjB0B,SAAU,SACVc,aAAc,MACd+B,OAAQ,OAZZ,sBAHwBqB,EAAEC,gBCFzBC,EA7EA,WACb,IAkBIC,EAAY,CACdC,eAAgB,OAChBlE,MAAO,UAeT,OACE,iCACE,gCACE,8BACI,oBAAIN,MAlCG,CACfE,SAAU,OACVG,QAAS,OACTF,eAAgB,OAChBG,MAAO,SACP0C,WAAY,MA6BJ,+BAEJ,uBAAO5C,QAAM,EAAb,SAlBG,6UAmBH,qBAAKG,GAAG,WAAWP,MA7BV,CACbK,QAAS,OACTF,eAAgB,QA2BZ,SACGR,EAAKC,WACJ,qCACE,eAAC,IAAD,CAAM2C,GAAG,MAAMvC,MAAOuE,EAAtB,UACG5E,EAAKkE,aAAazE,KAAKgC,SAD1B,kBAEE,0BAEF,cAAC,IAAD,CAAMmB,GAAG,IAAIxB,QAjDV,SAACa,GACdA,EAAMG,iBACNpC,EAAK8E,UA+CmCzE,MAAOuE,EAArC,6BAGA,cAAC,IAAD,CAAMhC,GAAG,IAAIvC,MAAOuE,EAApB,yBAMF,qCACE,cAAC,IAAD,CAAMhC,GAAG,SAASvC,MAAOuE,EAAzB,wBAGA,cAAC,IAAD,CAAMhC,GAAG,UAAUvC,MAAOuE,EAA1B,6BAGA,cAAC,IAAD,CAAMhC,GAAG,IAAIvC,MAAOuE,EAApB,iCCpDRG,EAAWC,YAAe,CAC9BC,IAAK,aAIDC,EAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAE1B1H,EAAQK,aAAaE,QAAQ,YAEnC,MAAO,CACLmH,QAAQ,2BACHA,GADE,IAELC,cAAe3H,EAAK,iBAAaA,GAAU,SAK3C4H,EAAS,IAAIC,IAAa,CAE9BC,KAAMP,EAASQ,OAAOX,GACtBY,MAAO,IAAIC,MA8BEC,MA3Bf,WACE,OACE,cAACC,EAAA,EAAD,CAAgBP,OAAQA,EAAxB,SACE,cAAC,IAAD,UACE,sBAAKhE,UAAU,4CAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,MAAlB,SACE,cAAC,EAAD,iBC/CCC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5G,MAAK,YAAkD,IAA/C6G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.869b81b2.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const theJoke = async (category)  =>\n    axios.get(`https://v2.jokeapi.dev/joke/${category}?blacklistFlags=nsfw,religious,racist,political,sexist,explicit`)\n\n\n\n","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_JOKE = gql`\n  mutation addJoke($jokeText: String!) {\n    addJoke(jokeText: $jokeText) {\n      _id\n      jokeText\n    }\n  }\n`;\n\nexport const REMOVE_JOKE = gql`\nmutation removeJoke($jokeId: ID!) {\n  removeJoke(jokeId: $jokeId){\n    _id\n  }\n}\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState, useEffect } from \"react\";\nimport { theJoke } from \"../../utils/API\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_JOKE } from \"../../utils/mutations\";\nimport Auth from \"../../utils/auth\";\n\nconst JokeContainer = () => {\n  const [btnColorNew, setBtnColorNew] = useState(\"rgb(169, 207, 243)\");\n  const [btnColorSave, setBtnColorSave] = useState(\"rgb(169, 207, 243)\");\n  // const [modalBtn, setModalBtn] = useState(\"none\")\n  const [clicked, setClicked] = useState(false);\n  const [result, setResult] = useState({});\n  const [category, setCategory] = useState(\"Any\");\n  const [addJoke] = useMutation(ADD_JOKE);\n\n  useEffect(() => {\n    theJoke(category).then((res) => {\n      setResult(res.data);\n    });\n  }, [category]);\n\n  const handleSelect = (e) => {\n    setCategory(e.target.value);\n  };\n\n  const newJoke = () => {\n    theJoke(category).then((res) => {\n      setResult(res.data);\n    });\n  };\n\n  const saveJoke = async (result) => {\n    // addJoke(e)\n    let fullJoke = \"\";\n    if (result.joke === undefined) {\n      fullJoke = result.setup + \"\\n\\n\" + result.delivery;\n    } else {\n      fullJoke = result.joke;\n    }\n//if logged in add joke\n//else please log in message\n    if (Auth.loggedIn()) {\n    await addJoke({\n      variables: { jokeText: fullJoke },\n    });}\n    else {\n      alert('To save, please signup or login. Thanks!')\n    }\n  };\n\n  const btnClicked = (e) => {\n    if (!clicked) {\n      setClicked(true);\n    }\n  };\n\n  var categoryStyle = {\n    display: \"flex\",\n    justifyContent: \"left\",\n    color: \"yellow\",\n  };\n\n  var selectStyle = {\n    fontSize: \"1.1rem\",\n    display: \"flex\",\n    backgroundColor: \"rgb(169, 207, 243)\",\n    justifyContent: \"center\",\n  };\n\n  var divStyle = {\n    marginTop: \"2%\",\n    fontSize: \"1.2rem\",\n    justifyContent: \"center\",\n  };\n\n  var jokeStyle = {\n    borderStyle: \"ridge\",\n    borderColor: \"yellow\",\n    display: \"inline-flex\",\n    color: \"yellow\",\n  };\n\n  // var modalStyle1 = {\n  //   display: \"block\",\n  //   color: \"#bf1010\",\n  //   position: \"fixed\",\n  //   top: \"4%\",\n  //   marginLeft: \"14%\",\n  //   padding: \"0% 5% 5% 5%\",\n  //   border: \"solid\",\n  //   backgroundColor: \"rgb(255 255 255)\"\n  // };\n\n  const css = `\n  @media (min-width: 375px) {\n    label {font-size: 1rem; padding-left: 14%}\n    button {margin-left: 14.5%}\n    #jokeDiv {margin: 8%; padding: 3%}\n  }\n  @media (min-width: 768px) {\n    label {font-size: 1.2rem; padding-left: 8.5%}\n    button {margin-left: 9.5%}\n    #jokeDiv {margin: 5%; padding: 2%}\n  }\n  @media (min-width: 1200px) {\n    label {font-size: 1.5rem; padding-left: 3%}\n    button {margin-left: 4%}\n    #jokeDiv {margin: 2%; padding: 1%}\n  }`;\n\n  return (\n    <div style={divStyle}>\n      <style scoped>{css}</style>\n      <label style={categoryStyle}>\n        Joke Category:&nbsp;&nbsp;&nbsp;\n        <select id=\"categoryList\" onChange={handleSelect} style={selectStyle}>\n          <option>Choose </option>\n          <option value=\"Any\">Any</option>\n          <option value=\"Misc\">Misc</option>\n          <option value=\"Programming\">Programming</option>\n          <option value=\"Pun\">Pun</option>\n          <option value=\"Halloween\">Halloween</option>\n          <option value=\"Christmas\">Christmas</option>\n        </select>\n      </label>\n      <div id=\"jokeDiv\" style={jokeStyle}>\n        {result.joke}\n        {result.setup}\n        <br />\n        <br />\n        {result.delivery}\n      </div>\n      <br />\n      <button\n        onClick={() => {\n          btnColorNew === \"rgb(169, 207, 243)\"\n            ? setBtnColorNew(\"yellow\")\n            : setBtnColorNew(\"rgb(169, 207, 243)\");\n          newJoke();\n        }}\n        style={{\n          backgroundColor: btnColorNew,\n          fontSize: \"1.1rem\",\n          borderRadius: \"8px\",\n        }}\n      >\n        New Joke!\n      </button>\n      <button\n        onClick={() => {\n          btnColorSave === \"rgb(169, 207, 243)\"\n            ? setBtnColorSave(\"yellow\")\n            : setBtnColorSave(\"rgb(169, 207, 243)\");\n          saveJoke(result);\n          btnClicked();\n        }}\n        style={{\n          backgroundColor: btnColorSave,\n          fontSize: \"1.1rem\",\n          borderRadius: \"8px\",\n        }}\n      >\n        Save Joke!\n      </button>\n      {/* <div className=\"modal\" style={modalStyle1}>\n            <h2>To save</h2>\n            <p>Please signup or login!</p>\n            <button id='close-btn' onClick={() =>{ modalBtn = \"none\" } } >Close</button>\n        </div> */}\n    </div>\n  );\n};\n\nexport default JokeContainer;\n","import React from 'react';\n\nimport JokeContainer from '../components/Jokes';\n\n\nconst Home = () => {\n\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n        >\n          <JokeContainer />\n        </div>\n        <div className=\"col-12 col-md-8 mb-3\">\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  var titleStyle = {\n    fontSize: \"1.8rem\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    paddingBottom: \"2%\",\n    color: \"yellow\"\n  };\n\n  var formStyle = {\n    fontSize: \"1.1rem\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexFlow: `row wrap`,\n    marginRight: \"8px\"\n  };\n\n  var divStyle = {\n    fontSize: \"1.2rem\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    paddingBottom: \"2%\",\n    paddingRight: \"2%\"\n  };\n\n  var btnSubmitStyle = {\n    fontSize: \"1.1rem\",\n    backgroundColor: \"rgb(169, 207, 243)\",\n    borderRadius: \"8px\",\n    cursor: 'pointer'\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 style={titleStyle}>Sign Up</h4>\n          <div className=\"card-body\" style={divStyle}>\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit} style={formStyle}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Enter username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                  style={formStyle}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Enter email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                  style={formStyle}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Enter password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                  style={formStyle}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  type=\"submit\"\n                  style={btnSubmitStyle}\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  var titleStyle = {\n    fontSize: \"1.8rem\",\n    display: \"flex\",\n    justifyContent: \"left\",\n    color: \"yellow\",\n    marginLeft: \"2%\"\n  };\n\n  var formStyle = {\n    fontSize: \"1.1rem\",\n    display: \"inline-block\",\n    justifyContent: \"center\",\n    margin: \"8px\",\n    marginLeft: \"1%\"  \n  };\n\n  var divStyle = {\n    fontSize: \"1.2rem\",\n    display: \"flex\",\n    justifyContent: \"left\",\n    paddingBottom: \"2%\",\n    paddingRight: \"2%\"\n  };\n\n  var btnSubmitStyle = {\n    fontSize: \"1.1rem\",\n    backgroundColor: \"rgb(169, 207, 243)\",\n    borderRadius: \"8px\",\n    cursor: 'pointer',\n    marginTop: \"3%\"\n  };\n\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 style={titleStyle}>Login</h4>\n          <div className=\"card-body\" style={divStyle}>\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit} style={formStyle}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Enter your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                  style={formStyle}\n                /> <div>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Enter your password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                  style={formStyle}\n                /> </div>\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  type=\"submit\"\n                  style={btnSubmitStyle}\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      jokes {\n        _id\n        jokeText\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      username\n    }\n      jokes {\n        _id\n        jokeText\n      }\n    }\n`;","import React, { useState } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { useQuery } from \"@apollo/client\";\nimport { REMOVE_JOKE } from \"../utils/mutations\";\n\nimport { QUERY_USER, QUERY_ME } from \"../utils/queries\";\n\nimport Auth from \"../utils/auth\";\n\nconst Profile = () => {\n  const [removeJoke] = useMutation(REMOVE_JOKE);\n  const [btnColorSave, setBtnColorSave] = useState(\"rgb(169, 207, 243)\");\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const deleteJoke = async (result) => {\n    await removeJoke({\n      variables: { jokeId: result },\n    });\n  };\n\n  const user = data?.me || data?.user || {};\n  // redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Redirect to=\"/me\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  var hStyle = {\n    color: \"yellow\",\n    marginLeft: \"1%\"\n  };\n\n  if (!user?.username) {\n    return (\n      <h4 style={hStyle}>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  var savedJokesStyle = {\n    color: \"yellow\",\n    whiteSpace: \"pre-wrap\",\n    borderStyle: \"ridge\",\n    borderColor: \"yellow\",\n    padding: \"1%\",\n    display: \"inline-flex\",\n  };\n\n  const css = `@media (min-width: 375px) {\n    h2 {font-size: 1.3rem; padding-left: 13%}\n    h4 {font-size: 1.9rem; padding-left: 13%}\n    li {font-size: 1.1rem; margin: 6%}\n    #savedJokes {margin: 5%}\n  }\n  @media (min-width: 768px) {\n    h2 {font-size: 1.4rem; padding-left: 8.5%}\n    li {font-size: 1.2rem; margin: 3%}\n    #savedJokes {margin: 2.5%; font-size: 1.2rem}\n  }\n  @media (min-width: 1200px) {\n    h2 {font-size: 2.1rem; padding-left: 3%}\n    li {font-size: 1.3rem; margin: 1%}\n    #savedJokes {margin: 1%; font-size: 1.4rem}\n  }`;\n\n  return (\n    <div>\n      <div className=\"flex-row justify-center mb-3\">\n        <style scoped>{css}</style>\n        <h2 style={hStyle}>\n          {user.username}, here are your jokes:\n          <br />\n        </h2>\n        <div>\n          {data.jokes.map((d) => (\n            <div id=\"savedJokes\" key={d._id} style={savedJokesStyle}>\n              {d.jokeText}\n\n              <button\n                onClick={() => {\n                  btnColorSave === \"rgb(169, 207, 243)\"\n                    ? setBtnColorSave(\"yellow\")\n                    : setBtnColorSave(\"rgb(169, 207, 243)\");\n                  deleteJoke(d._id);\n                  window.location.reload();\n                }}\n                style={{\n                  backgroundColor: btnColorSave,\n                  fontSize: \"1.1rem\",\n                  borderRadius: \"8px\",\n                  margin: \"5px\"\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  var titleStyle = {\n    fontSize: \"3rem\",\n    display: \"flex\",\n    justifyContent: \"left\",\n    color: \"yellow\",\n    marginLeft: \"2%\"\n  };\n\n  var divStyle = {\n    display: \"flex\",\n    justifyContent: \"left\",\n  };\n\n  var linkStyle = {\n    textDecoration: 'none',\n    color: \"yellow\",\n  };\n\n  const css = `@media (min-width: 375px) {\n    #navLinks { margin-bottom: 8%; margin-left: 14.7%; font-size: 1.1rem}\n  }\n  @media (min-width: 768px) {\n    #navLinks { margin-bottom: 3%; margin-left: 7.7%; font-size: 1.2rem}\n  }\n  @media (min-width: 1200px) {\n    #navLinks { margin-bottom: 1%; margin-left: 3.4%; font-size: 1.3rem}\n  }`;\n  \n\n\n  return (\n    <header>\n      <div >\n        <div>\n            <h1 style={titleStyle}>Just for Laughs</h1>\n        </div>\n        <style scoped>{css}</style>\n        <div id='navLinks' style={divStyle}>\n          {Auth.loggedIn() ? (\n            <>\n              <Link to=\"/me\" style={linkStyle}>\n                {Auth.getProfile().data.username}'s profile&nbsp;|\n                <br/>\n              </Link>\n              <Link to=\"/\" onClick={logout} style={linkStyle}>\n              &nbsp;Logout&nbsp;|\n              </Link>\n              <Link to=\"/\" style={linkStyle}>\n              &nbsp;Home\n              </Link>\n              \n            </>\n          ) : (\n            <>\n              <Link to=\"/login\" style={linkStyle}>\n                Login&nbsp;| \n              </Link>\n              <Link to=\"/signup\" style={linkStyle}>\n              &nbsp;Signup&nbsp;|\n              </Link>\n              <Link to=\"/\" style={linkStyle}>\n              &nbsp;Home\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import './App.css';\nimport React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Profile from './pages/Profile';\nimport Header from './components/Header';\n// import Footer from './components/Footer'\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/me\">\n              <Profile />\n            </Route>\n          </div>\n          {/* <Footer/> */}\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}