[{"/home/dave/du/projects/just_for_laughs/client/src/index.js":"1","/home/dave/du/projects/just_for_laughs/client/src/App.js":"2","/home/dave/du/projects/just_for_laughs/client/src/reportWebVitals.js":"3","/home/dave/du/projects/just_for_laughs/client/src/pages/Home.js":"4","/home/dave/du/projects/just_for_laughs/client/src/pages/SingleThought.js":"5","/home/dave/du/projects/just_for_laughs/client/src/pages/Profile.js":"6","/home/dave/du/projects/just_for_laughs/client/src/pages/Signup.js":"7","/home/dave/du/projects/just_for_laughs/client/src/pages/Login.js":"8","/home/dave/du/projects/just_for_laughs/client/src/components/Footer/index.js":"9","/home/dave/du/projects/just_for_laughs/client/src/components/Header/index.js":"10","/home/dave/du/projects/just_for_laughs/client/src/utils/queries.js":"11","/home/dave/du/projects/just_for_laughs/client/src/utils/mutations.js":"12","/home/dave/du/projects/just_for_laughs/client/src/utils/auth.js":"13","/home/dave/du/projects/just_for_laughs/client/src/components/ThoughtForm/index.js":"14","/home/dave/du/projects/just_for_laughs/client/src/components/CommentForm/index.js":"15","/home/dave/du/projects/just_for_laughs/client/src/components/CommentList/index.js":"16","/home/dave/du/projects/just_for_laughs/client/src/components/Jokes/index.js":"17","/home/dave/du/projects/just_for_laughs/client/src/utils/API.js":"18"},{"size":500,"mtime":1638249238172,"results":"19","hashOfConfig":"20"},{"size":1983,"mtime":1638319432067,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1638249238176,"results":"22","hashOfConfig":"20"},{"size":497,"mtime":1638507221472,"results":"23","hashOfConfig":"20"},{"size":1562,"mtime":1638317573312,"results":"24","hashOfConfig":"20"},{"size":1413,"mtime":1638507238964,"results":"25","hashOfConfig":"20"},{"size":2658,"mtime":1638317573312,"results":"26","hashOfConfig":"20"},{"size":2517,"mtime":1638319824889,"results":"27","hashOfConfig":"20"},{"size":847,"mtime":1638323644941,"results":"28","hashOfConfig":"20"},{"size":1306,"mtime":1638323870966,"results":"29","hashOfConfig":"20"},{"size":811,"mtime":1638507053462,"results":"30","hashOfConfig":"20"},{"size":1077,"mtime":1638317573336,"results":"31","hashOfConfig":"20"},{"size":1043,"mtime":1638317573336,"results":"32","hashOfConfig":"20"},{"size":3088,"mtime":1638323816606,"results":"33","hashOfConfig":"20"},{"size":2410,"mtime":1638317573284,"results":"34","hashOfConfig":"20"},{"size":953,"mtime":1638317573284,"results":"35","hashOfConfig":"20"},{"size":415,"mtime":1638506614414,"results":"36","hashOfConfig":"20"},{"size":497,"mtime":1638505853105,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1e4o3va",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/dave/du/projects/just_for_laughs/client/src/index.js",[],["79","80"],"/home/dave/du/projects/just_for_laughs/client/src/App.js",["81"],"import './App.css';\nimport React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport SingleThought from './pages/SingleThought';\nimport Profile from './pages/Profile';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/me\">\n              <Profile />\n            </Route>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/home/dave/du/projects/just_for_laughs/client/src/reportWebVitals.js",[],"/home/dave/du/projects/just_for_laughs/client/src/pages/Home.js",[],"/home/dave/du/projects/just_for_laughs/client/src/pages/SingleThought.js",[],"/home/dave/du/projects/just_for_laughs/client/src/pages/Profile.js",[],"/home/dave/du/projects/just_for_laughs/client/src/pages/Signup.js",[],"/home/dave/du/projects/just_for_laughs/client/src/pages/Login.js",["82"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation, ApolloClient } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","/home/dave/du/projects/just_for_laughs/client/src/components/Footer/index.js",[],"/home/dave/du/projects/just_for_laughs/client/src/components/Header/index.js",[],"/home/dave/du/projects/just_for_laughs/client/src/utils/queries.js",[],"/home/dave/du/projects/just_for_laughs/client/src/utils/mutations.js",[],"/home/dave/du/projects/just_for_laughs/client/src/utils/auth.js",[],"/home/dave/du/projects/just_for_laughs/client/src/components/ThoughtForm/index.js",["83"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What kind of joke do you want to hear?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to save your jokes. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","/home/dave/du/projects/just_for_laughs/client/src/components/CommentForm/index.js",["84"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","/home/dave/du/projects/just_for_laughs/client/src/components/CommentList/index.js",[],"/home/dave/du/projects/just_for_laughs/client/src/components/Jokes/index.js",[],"/home/dave/du/projects/just_for_laughs/client/src/utils/API.js",["85","86","87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":15,"column":8,"nodeType":"94","messageId":"95","endLine":15,"endColumn":21},{"ruleId":"92","severity":1,"message":"96","line":3,"column":23,"nodeType":"94","messageId":"95","endLine":3,"endColumn":35},{"ruleId":"92","severity":1,"message":"97","line":41,"column":15,"nodeType":"94","messageId":"95","endLine":41,"endColumn":19},{"ruleId":"92","severity":1,"message":"97","line":19,"column":15,"nodeType":"94","messageId":"95","endLine":19,"endColumn":19},{"ruleId":"92","severity":1,"message":"98","line":3,"column":7,"nodeType":"94","messageId":"95","endLine":3,"endColumn":14},{"ruleId":"92","severity":1,"message":"99","line":4,"column":7,"nodeType":"94","messageId":"95","endLine":4,"endColumn":17},{"ruleId":"92","severity":1,"message":"100","line":5,"column":7,"nodeType":"94","messageId":"95","endLine":5,"endColumn":13},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'SingleThought' is defined but never used.","Identifier","unusedVar","'ApolloClient' is defined but never used.","'data' is assigned a value but never used.","'baseURL' is assigned a value but never used.","'categories' is assigned a value but never used.","'params' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]